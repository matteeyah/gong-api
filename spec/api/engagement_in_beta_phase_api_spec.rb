=begin
#Gong API



OpenAPI spec version: V2

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.37
=end

require 'spec_helper'
require 'json'

# Unit tests for GongAPI::EngagementInBetaPhaseApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'EngagementInBetaPhaseApi' do
  before do
    # run before each test
    @instance = GongAPI::EngagementInBetaPhaseApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of EngagementInBetaPhaseApi' do
    it 'should create an instance of EngagementInBetaPhaseApi' do
      expect(@instance).to be_instance_of(GongAPI::EngagementInBetaPhaseApi)
    end
  end

  # unit tests for content_shared_using_put
  # Report event of a content share (/v2/customer-engagement/content/shared)
  # Push engagement events into Gong and display them as events in Gong’s activity timeline, when a Gong user shares content with external participants (for example, a contract was “shared” by the account executive with his prospects)  When accessed through a Bearer token authorization method, this endpoint requires the scope &#x27;api:engagement-data:write&#x27;.
  # @param body request
  # @param [Hash] opts the optional parameters
  # @return [BaseResponse]
  describe 'content_shared_using_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for content_viewed_using_put
  # Report event of a content view (/v2/customer-engagement/content/viewed)
  # Push engagement events into Gong and display them as events in Gong’s activity timeline, when a content is viewed by an external participant (for example, a contract was “viewed” by the prospect)  When accessed through a Bearer token authorization method, this endpoint requires the scope &#x27;api:engagement-data:write&#x27;.
  # @param body request
  # @param [Hash] opts the optional parameters
  # @return [BaseResponse]
  describe 'content_viewed_using_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for custom_action_using_put
  # Report event of a custom action (/v2/customer-engagement/action)
  # Push engagement events into Gong and display them as events in Gong’s activity timeline, when a content is engaged by an external participant (for example, a contract was “signed” by the prospect)  When accessed through a Bearer token authorization method, this endpoint requires the scope &#x27;api:engagement-data:write&#x27;.
  # @param body request
  # @param [Hash] opts the optional parameters
  # @return [BaseResponse]
  describe 'custom_action_using_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
