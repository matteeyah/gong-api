=begin
#Gong API



OpenAPI spec version: V2

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.37
=end

# Common files
require 'gong_api/api_client'
require 'gong_api/api_error'
require 'gong_api/version'
require 'gong_api/configuration'

# Models
require 'gong_api/models/actor'
require 'gong_api/models/aggregate_activity'
require 'gong_api/models/aggregate_activity_with_dates'
require 'gong_api/models/answer'
require 'gong_api/models/answered_scorecard'
require 'gong_api/models/answered_scorecards'
require 'gong_api/models/answered_scorecards_filter'
require 'gong_api/models/association_object'
require 'gong_api/models/async_processing_response'
require 'gong_api/models/base_response'
require 'gong_api/models/call'
require 'gong_api/models/call_access_details'
require 'gong_api/models/call_access_with_permission_level'
require 'gong_api/models/call_basic_data'
require 'gong_api/models/call_collaboration'
require 'gong_api/models/call_content'
require 'gong_api/models/call_context'
require 'gong_api/models/call_interaction'
require 'gong_api/models/call_participant'
require 'gong_api/models/call_reference'
require 'gong_api/models/call_transcript'
require 'gong_api/models/call_transcripts'
require 'gong_api/models/call_upload_context'
require 'gong_api/models/call_users_access_dto'
require 'gong_api/models/calls'
require 'gong_api/models/calls_access_details_response'
require 'gong_api/models/calls_access_get_dto'
require 'gong_api/models/calls_filter'
require 'gong_api/models/calls_request_filter_with_owners'
require 'gong_api/models/calls_response'
require 'gong_api/models/calls_users_access_add_dto'
require 'gong_api/models/calls_users_access_delete_dto'
require 'gong_api/models/coaching_access_with_permission_level'
require 'gong_api/models/collaboration'
require 'gong_api/models/comment'
require 'gong_api/models/company_users_aggregate_activity_response'
require 'gong_api/models/company_users_intercation_stats_response'
require 'gong_api/models/content'
require 'gong_api/models/content_selector'
require 'gong_api/models/content_shared_event'
require 'gong_api/models/content_viewed_event'
require 'gong_api/models/context_field'
require 'gong_api/models/crm_party_context_field'
require 'gong_api/models/custom_action_event'
require 'gong_api/models/customer_data'
require 'gong_api/models/customer_data_object'
require 'gong_api/models/customer_engagement'
require 'gong_api/models/daily_activity_with_dates'
require 'gong_api/models/deals_access_with_permission_level'
require 'gong_api/models/delete_meeting_request'
require 'gong_api/models/email_address_references'
require 'gong_api/models/email_message'
require 'gong_api/models/emails_access_with_permission_level'
require 'gong_api/models/error_response'
require 'gong_api/models/event_accepted_response'
require 'gong_api/models/exposed_fields'
require 'gong_api/models/external_call_object'
require 'gong_api/models/external_crm_call_object'
require 'gong_api/models/external_crm_party_object'
require 'gong_api/models/external_party_object'
require 'gong_api/models/external_system'
require 'gong_api/models/external_system_object'
require 'gong_api/models/forecast_access_with_permission_level'
require 'gong_api/models/generic_crm_integration'
require 'gong_api/models/generic_crm_registration_request'
require 'gong_api/models/generic_deal_stage_request'
require 'gong_api/models/generic_property'
require 'gong_api/models/generic_schema_field_request'
require 'gong_api/models/get_generic_crm_objects_response'
require 'gong_api/models/id_media_body'
require 'gong_api/models/insights_access_with_permission_level'
require 'gong_api/models/integration_status_request'
require 'gong_api/models/integration_status_response'
require 'gong_api/models/interaction'
require 'gong_api/models/interaction_stat'
require 'gong_api/models/interaction_stats'
require 'gong_api/models/library_call'
require 'gong_api/models/library_folder'
require 'gong_api/models/library_folder_access'
require 'gong_api/models/library_folder_list_of_calls_response'
require 'gong_api/models/library_response'
require 'gong_api/models/line_error_response'
require 'gong_api/models/list_generic_crm_integrations_response'
require 'gong_api/models/list_selected_fields_response'
require 'gong_api/models/log_entry'
require 'gong_api/models/logs_response'
require 'gong_api/models/manual_association_response'
require 'gong_api/models/manual_associations_basic_data'
require 'gong_api/models/map_users_body'
require 'gong_api/models/media'
require 'gong_api/models/meeting'
require 'gong_api/models/meeting_invitee'
require 'gong_api/models/meetings_error_response'
require 'gong_api/models/monologue'
require 'gong_api/models/multiple_users_request_with_creation_dates'
require 'gong_api/models/multiple_users_with_dates'
require 'gong_api/models/new_call_adding_request'
require 'gong_api/models/new_call_adding_response'
require 'gong_api/models/new_call_recording_response'
require 'gong_api/models/new_meeting_request'
require 'gong_api/models/new_meeting_response'
require 'gong_api/models/object_entities_body'
require 'gong_api/models/occurrences'
require 'gong_api/models/party'
require 'gong_api/models/party_context'
require 'gong_api/models/party_context_field'
require 'gong_api/models/party_upload_context'
require 'gong_api/models/permission_profile_dto'
require 'gong_api/models/permission_profile_response'
require 'gong_api/models/permission_profile_users_response'
require 'gong_api/models/permission_profiles_response'
require 'gong_api/models/phone_number_references'
require 'gong_api/models/point_of_interest'
require 'gong_api/models/points_of_interest'
require 'gong_api/models/question'
require 'gong_api/models/questions'
require 'gong_api/models/records'
require 'gong_api/models/register_generic_crm_response'
require 'gong_api/models/request_answered_scorecards_filter'
require 'gong_api/models/request_calls_access_get_dto'
require 'gong_api/models/request_calls_filter'
require 'gong_api/models/request_calls_request_filter_with_owners_content_selector'
require 'gong_api/models/request_multiple_users_request_with_creation_dates'
require 'gong_api/models/request_multiple_users_with_dates'
require 'gong_api/models/request_status_response'
require 'gong_api/models/request_with_time_period_multiple_users_with_dates'
require 'gong_api/models/schema_update_response'
require 'gong_api/models/scorecard'
require 'gong_api/models/scorecards'
require 'gong_api/models/sentence'
require 'gong_api/models/settings'
require 'gong_api/models/settings_history'
require 'gong_api/models/sharer'
require 'gong_api/models/snippet'
require 'gong_api/models/speaker'
require 'gong_api/models/speakers_timeline'
require 'gong_api/models/specific_call'
require 'gong_api/models/speech_segment'
require 'gong_api/models/spoken_language'
require 'gong_api/models/structure'
require 'gong_api/models/topic'
require 'gong_api/models/tracker'
require 'gong_api/models/tracker_phrases'
require 'gong_api/models/update_meeting_request'
require 'gong_api/models/update_meeting_response'
require 'gong_api/models/user'
require 'gong_api/models/user_access_details'
require 'gong_api/models/user_activity'
require 'gong_api/models/user_aggregate_by_period_activities'
require 'gong_api/models/user_day_by_day_activity'
require 'gong_api/models/user_integration_status'
require 'gong_api/models/user_metadata'
require 'gong_api/models/user_settings_history'
require 'gong_api/models/user_simple_metadata'
require 'gong_api/models/users_aggregate_by_period_activity'
require 'gong_api/models/users_day_by_day_activity'
require 'gong_api/models/users_metadata'
require 'gong_api/models/video'
require 'gong_api/models/workspace_metadata'
require 'gong_api/models/workspaces_metadata'

# APIs
require 'gong_api/api/auditing_api'
require 'gong_api/api/crm_api'
require 'gong_api/api/calls_api'
require 'gong_api/api/data_privacy_api'
require 'gong_api/api/engagement_in_beta_phase_api'
require 'gong_api/api/library_api'
require 'gong_api/api/meetings_in_beta_phase_api'
require 'gong_api/api/permissions_api'
require 'gong_api/api/settings_api'
require 'gong_api/api/stats_api'
require 'gong_api/api/users_api'

module GongAPI
  class << self
    # Customize default settings for the SDK using block.
    #   GongAPI.configure do |config|
    #     config.username = "xxx"
    #     config.password = "xxx"
    #   end
    # If no block given, return the default Configuration object.
    def configure
      if block_given?
        yield(Configuration.default)
      else
        Configuration.default
      end
    end
  end
end
